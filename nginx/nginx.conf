# Nginx configuration for MCP ADHD Server
# Production-ready reverse proxy with SSL and security headers

# Main context configuration
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Worker configuration for high performance
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# Main HTTP configuration
http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for" '
                   'rt=$request_time uct="$upstream_connect_time" '
                   'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Gzip compression for better performance (important for ADHD response times)
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private must-revalidate max-age=0;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/json application/xml+rss;

    # Rate limiting for security (ADHD-aware limits)
    limit_req_zone $binary_remote_addr zone=api:10m rate=60r/m;
    limit_req_zone $binary_remote_addr zone=health:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=10r/m;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

    # SSL session settings
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Security headers (applied to all responses)
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-Permitted-Cross-Domain-Policies "none" always;

    # Upstream configuration for MCP server
    upstream mcp_backend {
        server mcp-server:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # HTTP server (redirects to HTTPS)
    server {
        listen 80;
        server_name _;
        
        # Health check endpoint (allow HTTP for monitoring)
        location /health {
            limit_req zone=health burst=20 nodelay;
            proxy_pass http://mcp_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Redirect all other traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS server (main application)
    server {
        listen 443 ssl http2;
        server_name _;

        # SSL certificate configuration
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;

        # HSTS header for security
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        # Content Security Policy for ADHD app security
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss:; frame-src 'none';" always;

        # Client body size limit
        client_max_body_size 10M;

        # Connection limiting
        limit_conn conn_limit_per_ip 20;

        # Root location - main API endpoints
        location / {
            limit_req zone=api burst=30 nodelay;

            # Proxy settings optimized for ADHD response times
            proxy_pass http://mcp_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # Timeouts optimized for ADHD requirements (<3s)
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 30s;

            # Buffer settings for performance
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }

        # Health check endpoint (less restrictive rate limiting)
        location /health {
            limit_req zone=health burst=50 nodelay;
            
            proxy_pass http://mcp_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Fast timeouts for health checks
            proxy_connect_timeout 2s;
            proxy_send_timeout 5s;
            proxy_read_timeout 10s;
        }

        # Authentication endpoints (stricter rate limiting)
        location ~ ^/api/(auth|users/[^/]+/api-keys|users/[^/]+/sessions) {
            limit_req zone=auth burst=5 nodelay;
            
            proxy_pass http://mcp_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Metrics endpoint (internal monitoring)
        location /metrics {
            # Restrict to local network only
            allow 172.20.0.0/16;  # Docker network
            allow 127.0.0.1;      # Localhost
            deny all;
            
            proxy_pass http://mcp_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Static files (dashboard, assets)
        location /static/ {
            expires 1h;
            add_header Cache-Control "public, immutable";
            
            proxy_pass http://mcp_backend;
            proxy_set_header Host $host;
        }

        # WebSocket support for real-time features
        location /ws {
            proxy_pass http://mcp_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Extended timeouts for WebSocket connections
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }

        # Security: Block access to sensitive files
        location ~ /\.(ht|git|env) {
            deny all;
            return 404;
        }

        location ~ \.(sql|bak|backup|log)$ {
            deny all;
            return 404;
        }

        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /etc/nginx/html;
            internal;
        }
        
        location = /50x.html {
            root /etc/nginx/html;
            internal;
        }
    }

    # Additional server block for API subdomain (if used)
    server {
        listen 443 ssl http2;
        server_name api.*;

        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;

        # API-specific security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;

        # API endpoints only
        location / {
            limit_req zone=api burst=50 nodelay;
            
            proxy_pass http://mcp_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # API-optimized timeouts
            proxy_connect_timeout 3s;
            proxy_send_timeout 5s;
            proxy_read_timeout 30s;
        }
    }
}