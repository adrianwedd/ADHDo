[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mcp-adhd-server"
dynamic = ["version"]
description = "Meta-Cognitive Protocol server for ADHD executive function support"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
keywords = ["adhd", "ai", "productivity", "llm", "context", "executive-function"]
authors = [
  { name = "Adrian Wedd", email = "adrian@adrianwedd.com" },
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: End Users/Desktop",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Office/Business :: Scheduling",
]
dependencies = [
  "fastapi>=0.104.0",
  "uvicorn[standard]>=0.24.0",
  "pydantic>=2.4.0",
  "redis>=5.0.0",
  "asyncpg>=0.29.0",
  "sqlalchemy[asyncio]>=2.0.0",
  "alembic>=1.12.0",
  "httpx>=0.25.0",
  "python-telegram-bot>=20.0",
  "openai>=1.3.0",
  "pydantic-settings>=2.0.0",
  "python-dotenv>=1.0.0",
  "structlog>=23.2.0",
  "typer>=0.9.0",
  "rich>=13.0.0",
  "psutil>=5.9.0",
  "prometheus-client>=0.19.0",
  "jinja2>=3.1.0",
  # Security Dependencies
  "bleach>=6.1.0",
  # Background Processing Dependencies
  "celery[redis]>=5.3.0",
  "kombu>=5.3.0",
  "vine>=5.1.0",
  # Advanced Caching Dependencies
  "redis[hiredis]>=5.0.0",
  "hiredis>=2.3.0",
  "lz4>=4.3.0",
  "python-snappy>=0.6.1",
  # Performance and Concurrency Dependencies
  "aiofiles>=23.2.0",
  "aioredis>=2.0.0",
  "asyncio-throttle>=1.0.2",
  "asyncache>=0.3.1",
  # Data Processing Dependencies
  "msgpack>=1.0.7",
  "orjson>=3.9.0",
  "ujson>=5.8.0",
  # Monitoring and Observability Dependencies
  "sentry-sdk[fastapi,sqlalchemy,redis,httpx,logging]>=1.40.0",
  "opentelemetry-api>=1.21.0",
  "opentelemetry-sdk>=1.21.0",
  "opentelemetry-auto-instrumentation>=0.42b0",
  "opentelemetry-instrumentation-fastapi>=0.42b0",
  "opentelemetry-instrumentation-sqlalchemy>=0.42b0",
  "opentelemetry-instrumentation-redis>=0.42b0",
  "opentelemetry-instrumentation-httpx>=0.42b0",
  "opentelemetry-instrumentation-psutil>=0.42b0",
  "opentelemetry-exporter-jaeger>=1.21.0",
  "opentelemetry-exporter-prometheus>=1.12.0rc1",
  "opentelemetry-propagator-b3>=1.21.0",
  "py-cpuinfo>=9.0.0",
]

[project.optional-dependencies]
dev = [
  "pytest>=7.4.0",
  "pytest-asyncio>=0.21.0",
  "pytest-mock>=3.12.0",
  "pytest-cov>=4.1.0",
  "pytest-benchmark>=4.0.0",
  "pytest-xdist>=3.3.0",
  "black>=23.0.0",
  "ruff>=0.1.0",
  "mypy>=1.6.0",
  "pre-commit>=3.5.0",
  "bandit>=1.7.5",
  "safety>=2.3.0",
  "coverage[toml]>=7.3.0",
  "httpx>=0.25.0",
  # Accessibility testing tools
  "playwright>=1.40.0",
  "pytest-playwright>=0.4.0",
  "axe-playwright-python>=0.1.3",
  "selenium>=4.15.0",
  "pytest-html>=4.1.0",
  "pytest-metadata>=3.0.0",
  "requests>=2.31.0",
  "colorama>=0.4.6",
  "beautifulsoup4>=4.12.0",
  # Performance testing tools
  "pytest-timeout>=2.2.0",
  "pytest-profiling>=1.7.0",
  "memory-profiler>=0.61.0",
  "py-spy>=0.3.14",
  "locust>=2.17.0",
  "pytest-stress>=1.0.1",
]
performance = [
  # High-performance production dependencies
  "uvloop>=0.19.0",
  "cchardet>=2.1.7",
  "aiodns>=3.1.0",
  "brotli>=1.1.0",
  # Background processing performance
  "celery[redis,msgpack]>=5.3.0",
  "redis[hiredis]>=5.0.0",
  "hiredis>=2.3.0",
  # Cache compression and serialization
  "lz4>=4.3.0",
  "python-snappy>=0.6.1",
  "zstd>=1.5.2.6",
  "msgpack>=1.0.7",
  "orjson>=3.9.0",
  # Memory optimization
  "pympler>=0.9",
  "objgraph>=3.6.0",
]
integrations = [
  "google-api-python-client>=2.100.0",
  "google-auth-httplib2>=0.2.0",
  "google-auth-oauthlib>=1.1.0",
  "homeassistant-api>=4.1.0",
]
ai = [
  "langchain>=0.0.300",
  "langchain-openai>=0.0.2",
  "tiktoken>=0.5.0",
]

[project.urls]
Documentation = "https://github.com/adrianwedd/mcp-adhd-server#readme"
Issues = "https://github.com/adrianwedd/mcp-adhd-server/issues"
Source = "https://github.com/adrianwedd/mcp-adhd-server"

[project.scripts]
mcp-server = "mcp_server.cli:main"

[tool.hatch.version]
path = "src/mcp_server/__about__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/mcp_server"]

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov-html = [
  "- coverage combine", 
  "coverage html",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.9", "3.10", "3.11", "3.12"]

[tool.coverage.run]
source_dir = "src"
branch = true
parallel = true
omit = [
  "src/mcp_server/__about__.py",
]

[tool.coverage.paths]
mcp_server = ["src/mcp_server", "*/mcp-adhd-server/src/mcp_server"]
tests = ["tests", "*/mcp-adhd-server/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.black]
target-version = ["py39"]
line-length = 88
skip-string-normalization = true

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
  "A",
  "ARG", 
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]

[tool.ruff.isort]
known-first-party = ["mcp_server"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]
# Accessibility tests can use additional patterns
"tests/accessibility/**/*" = ["PLR2004", "S101", "TID252", "S603", "S607"]

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
mypy_path = "src"
no_implicit_optional = true
show_error_codes = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = [
  "redis.*",
  "telegram.*",
  "homeassistant_api.*",
]
ignore_missing_imports = true