"""Initial database schema

Revision ID: 001
Revises: 
Create Date: 2025-08-06 10:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '001'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('preferred_nudge_methods', sa.JSON(), nullable=False),
    sa.Column('nudge_timing_preferences', sa.JSON(), nullable=False),
    sa.Column('energy_patterns', sa.JSON(), nullable=False),
    sa.Column('hyperfocus_indicators', sa.JSON(), nullable=False),
    sa.Column('telegram_chat_id', sa.String(length=255), nullable=True),
    sa.Column('google_calendar_id', sa.String(length=255), nullable=True),
    sa.Column('home_assistant_entity_prefix', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('user_id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email'))
    )
    
    op.create_table('api_keys',
    sa.Column('key_id', sa.String(length=255), nullable=False),
    sa.Column('user_id', sa.String(length=255), nullable=False),
    sa.Column('key_hash', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('permissions', sa.JSON(), nullable=False),
    sa.Column('requests_per_minute', sa.Integer(), nullable=False),
    sa.Column('requests_per_day', sa.Integer(), nullable=False),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('total_requests', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name=op.f('fk_api_keys_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('key_id', name=op.f('pk_api_keys')),
    sa.UniqueConstraint('key_hash', name=op.f('uq_api_keys_key_hash'))
    )
    op.create_index('ix_api_keys_hash', 'api_keys', ['key_hash'], unique=False)
    op.create_index('ix_api_keys_user_active', 'api_keys', ['user_id', 'is_active'], unique=False)
    
    op.create_table('sessions',
    sa.Column('session_id', sa.String(length=255), nullable=False),
    sa.Column('user_id', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_accessed', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name=op.f('fk_sessions_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('session_id', name=op.f('pk_sessions'))
    )
    op.create_index('ix_sessions_expires', 'sessions', ['expires_at'], unique=False)
    op.create_index('ix_sessions_user_active', 'sessions', ['user_id', 'is_active'], unique=False)
    
    op.create_table('system_health',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('component', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('response_time_ms', sa.Float(), nullable=True),
    sa.Column('error_rate', sa.Float(), nullable=True),
    sa.Column('uptime_seconds', sa.Integer(), nullable=True),
    sa.Column('memory_usage_mb', sa.Float(), nullable=True),
    sa.Column('cpu_usage_percent', sa.Float(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('measured_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("component IN ('redis', 'database', 'llm', 'telegram', 'overall')", name='ck_system_health_component_values'),
    sa.CheckConstraint("status IN ('healthy', 'degraded', 'unhealthy')", name='ck_system_health_status_values'),
    sa.CheckConstraint('error_rate >= 0.0 AND error_rate <= 1.0', name='ck_system_health_error_rate_range'),
    sa.CheckConstraint('cpu_usage_percent >= 0.0 AND cpu_usage_percent <= 100.0', name='ck_system_health_cpu_range'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_system_health'))
    )
    op.create_index('ix_system_health_component_time', 'system_health', ['component', 'measured_at'], unique=False)
    op.create_index('ix_system_health_status', 'system_health', ['status'], unique=False)
    
    op.create_table('tasks',
    sa.Column('task_id', sa.String(length=255), nullable=False),
    sa.Column('user_id', sa.String(length=255), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('completion_percentage', sa.Float(), nullable=False),
    sa.Column('estimated_focus_time', sa.Integer(), nullable=True),
    sa.Column('energy_required', sa.String(length=20), nullable=False),
    sa.Column('dopamine_reward_tier', sa.Integer(), nullable=False),
    sa.Column('hyperfocus_compatible', sa.Boolean(), nullable=False),
    sa.Column('tags', sa.JSON(), nullable=False),
    sa.Column('context_triggers', sa.JSON(), nullable=False),
    sa.Column('due_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('preferred_time_blocks', sa.JSON(), nullable=False),
    sa.Column('nudge_count', sa.Integer(), nullable=False),
    sa.Column('last_nudge_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('nudge_effectiveness', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('priority >= 1 AND priority <= 5', name='ck_tasks_priority_range'),
    sa.CheckConstraint("status IN ('pending', 'in_progress', 'completed', 'cancelled')", name='ck_tasks_status_values'),
    sa.CheckConstraint('completion_percentage >= 0.0 AND completion_percentage <= 1.0', name='ck_tasks_completion_range'),
    sa.CheckConstraint("energy_required IN ('low', 'medium', 'high')", name='ck_tasks_energy_values'),
    sa.CheckConstraint('dopamine_reward_tier >= 1 AND dopamine_reward_tier <= 5', name='ck_tasks_dopamine_range'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name=op.f('fk_tasks_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('task_id', name=op.f('pk_tasks'))
    )
    op.create_index('ix_tasks_due_date', 'tasks', ['due_date'], unique=False)
    op.create_index('ix_tasks_priority', 'tasks', ['priority'], unique=False)
    op.create_index('ix_tasks_user_status', 'tasks', ['user_id', 'status'], unique=False)
    
    op.create_table('trace_memories',
    sa.Column('trace_id', sa.String(length=255), nullable=False),
    sa.Column('user_id', sa.String(length=255), nullable=False),
    sa.Column('trace_type', sa.String(length=50), nullable=False),
    sa.Column('content', sa.JSON(), nullable=False),
    sa.Column('task_id', sa.String(length=255), nullable=True),
    sa.Column('frame_id', sa.String(length=255), nullable=True),
    sa.Column('session_id', sa.String(length=255), nullable=True),
    sa.Column('processing_time_ms', sa.Float(), nullable=True),
    sa.Column('cognitive_load', sa.Float(), nullable=True),
    sa.Column('was_successful', sa.Boolean(), nullable=True),
    sa.Column('error_details', sa.JSON(), nullable=True),
    sa.Column('source', sa.String(length=50), nullable=False),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("trace_type IN ('user_input', 'system_response', 'context_update', 'nudge', 'completion')", name='ck_trace_memories_type_values'),
    sa.CheckConstraint('cognitive_load >= 0.0 AND cognitive_load <= 1.0', name='ck_trace_memories_cognitive_load_range'),
    sa.CheckConstraint("source IN ('web', 'telegram', 'api', 'webhook', 'system')", name='ck_trace_memories_source_values'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name=op.f('fk_trace_memories_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('trace_id', name=op.f('pk_trace_memories'))
    )
    op.create_index('ix_trace_memories_session', 'trace_memories', ['session_id'], unique=False)
    op.create_index('ix_trace_memories_task', 'trace_memories', ['task_id'], unique=False)
    op.create_index('ix_trace_memories_type', 'trace_memories', ['trace_type'], unique=False)
    op.create_index('ix_trace_memories_user_created', 'trace_memories', ['user_id', 'created_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_trace_memories_user_created', table_name='trace_memories')
    op.drop_index('ix_trace_memories_type', table_name='trace_memories')
    op.drop_index('ix_trace_memories_task', table_name='trace_memories')
    op.drop_index('ix_trace_memories_session', table_name='trace_memories')
    op.drop_table('trace_memories')
    op.drop_index('ix_tasks_user_status', table_name='tasks')
    op.drop_index('ix_tasks_priority', table_name='tasks')
    op.drop_index('ix_tasks_due_date', table_name='tasks')
    op.drop_table('tasks')
    op.drop_index('ix_system_health_status', table_name='system_health')
    op.drop_index('ix_system_health_component_time', table_name='system_health')
    op.drop_table('system_health')
    op.drop_index('ix_sessions_user_active', table_name='sessions')
    op.drop_index('ix_sessions_expires', table_name='sessions')
    op.drop_table('sessions')
    op.drop_index('ix_api_keys_user_active', table_name='api_keys')
    op.drop_index('ix_api_keys_hash', table_name='api_keys')
    op.drop_table('api_keys')
    op.drop_table('users')
    # ### end Alembic commands ###